@page "/chat/{salaid:int}/{participanteid:int}"

@using ChatSignalRBlazor.Shared
@using Microsoft.AspNetCore.SignalR.Client

@inject NavigationManager NavigationManager
@inject HttpClient Http

<div class="row" style="position:sticky; top:5px; background-color:white">
    <div class="col-6">
        <h2>Sala: @salaid </h2>
    </div>
    <div class="col-auto">
        <h2>Participante: @participanteid</h2>
    </div>

    <div class="col-auto">
        <input type="button" class="btn btn-danger" @onclick="NavegarIndex" value="Salir" />
    </div>
</div>


<hr />
<h4>Mensajes </h4>
@if (mensajes == null)
{
    <p>Cargando mensajes...</p>
}
else
{
    @foreach (var mensaje in mensajes)
    {

        if (mensaje.ParticipanteId == participanteid)
        {
            <div class="container" style="margin-right:100px; max-width:400px">
                <p style="line-height:100%; background-color:lightgreen; border-radius:10px">
                    @mensaje.Contenido
                    <br />
                    <a href="/chat/borrar/@mensaje.SalaId/@mensaje.ParticipanteId/@mensaje.Id" style="color:darkred"><b> <font size="2">X Eliminar</font></b></a> <font size=1>@mensaje.Fecha_Hora</font>
                </p>
            </div>
        }
        else
        {
            <div class="container" style="margin-left:5px; max-width:400px">
                <p style="line-height:100%; background-color:lightblue; border-radius:10px">
                    <b>@mensaje.ParticipanteId: </b>@mensaje.Contenido
                    <br />
                    <font size=1>@mensaje.Fecha_Hora</font>
                </p>
            </div>
        }
    }
}

<hr>
<div class="row" style="position:sticky; bottom:5px; background-color:white">
    <div class="col-md-10">
        <div class="form-group">
            <input for="Name" class="form-control" @bind="@mensajeCrea.Contenido" />
        </div>
    </div>

    <div class="col-md-auto">
        <div class="form-group">
            <input type="button" class="btn btn-primary" @onclick="@CreaMensaje" value="Enviar" />
        </div>
    </div>
</div>

@code {
    Mensaje[] mensajes;
    Mensaje mensajeCrea = new Mensaje();

    private HubConnection hubConnection;

    [Parameter]
    public int salaid { get; set; }
    [Parameter]
    public int participanteid { get; set; }

    private void NavegarIndex()
    {
        NavigationManager.NavigateTo("/");
    }

    protected override async Task OnInitializedAsync()
    {

        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/broadcastHub"))
            .Build();

        hubConnection.On("ReceiveMessage", () =>
        {
            CallLoadData();
            StateHasChanged();
        });

        await hubConnection.StartAsync();

        await LoadData();
    }

    private void CallLoadData()
    {
        Task.Run(async () =>
        {
            await LoadData();
        });
    }

    protected async Task LoadData()
    {
        mensajes = await Http.GetFromJsonAsync<Mensaje[]>("api/mensajes/bysala/" + salaid);
        StateHasChanged();
    }

    //public bool IsConnected =>
    //    hubConnection.State == HubConnectionState.Connected;

    public void Dispose()
    {
        _ = hubConnection.DisposeAsync();
    }

    protected async Task CreaMensaje()
    {
        mensajeCrea.ParticipanteId = participanteid;
        mensajeCrea.SalaId = salaid;
        mensajeCrea.Fecha_Hora = DateTime.Now;

        await Http.PostAsJsonAsync("api/mensajes", mensajeCrea);
        //if (IsConnected) await SendMessage();
    }

    //Task SendMessage() => hubConnection.SendAsync("SendMessage");
}
